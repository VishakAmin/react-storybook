const { VanillaExtractPlugin } = require('@vanilla-extract/webpack-plugin');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');

module.exports = {
  webpackFinal(baseConfig, options) {
    const { module = {}, plugins = {} } = baseConfig;

    const isCssRule = (rule) =>
      []
        .concat(rule?.test)
        .filter(Boolean)
        .find((expr) => expr.test('random.css'));
    module.rules
      .map(({ oneOf, ...rule }) =>
        oneOf ? oneOf.find(isCssRule) : isCssRule(rule),
      )
      .filter(Boolean)
      // Here we exclude *.vanilla.css files which will be taken up by the vanilla-extract
      .forEach((match) => match.exclude.push(/\.vanilla\.css$/));

    return {
      ...baseConfig,
      plugins: [
        ...plugins,
        new VanillaExtractPlugin(),
        new MiniCssExtractPlugin(),
      ],
      module: {
        ...module,
        rules: [
          ...module.rules,
          {
            test: /\.vanilla\.css$/i, // Targets only CSS files generated by vanilla-extract
            use: [
              MiniCssExtractPlugin.loader,
              {
                loader: require.resolve('css-loader'),
                options: {
                  url: false, // Required as image imports should be handled via JS/TS import statements
                },
              },
            ],
          },
        ],
      },
    };
  },
};